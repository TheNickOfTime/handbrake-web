name: Docker Publish

on:
  push:
    branches:
      - main
      - release/**
    paths-ignore:
      - handbrake/Dockerfile
  pull_request:
    branches:
      - main
      - release/**
    paths-ignore:
      - handbrake/Dockerfile
  release:
    types: [published]
  workflow_call:

env:
  REGISTRY: ghcr.io
  REPO_OWNER: ${{ github.repository_owner }}

jobs:
  build-handbrake-web:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - image: handbrake-web-server
            file: server/Dockerfile

          - image: handbrake-web-worker
            file: worker/Dockerfile
            hardware-acceleration: none

          - image: handbrake-web-worker
            file: worker/Dockerfile
            hardware-acceleration: intel

          - image: handbrake-web-worker
            file: worker/Dockerfile
            hardware-acceleration: nvidia

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.REPO_OWNER }}/${{ matrix.image }}
          tags: |
            type=ref,event=branch,enabled=${{ matrix.hardware-acceleration == 'none' }}
            type=ref,event=branch,suffix=${{ matrix.hardware-acceleration }},enabled=${{ matrix.hardware-acceleration != 'none' }}
            type=ref,event=pr,enabled=${{ matrix.hardware-acceleration == 'none' }}
            type=ref,event=pr,suffix=${{ matrix.hardware-acceleration }},enabled=${{ matrix.hardware-acceleration != 'none' }}
            type=semver,pattern={{version}},enabled=${{ matrix.hardware-acceleration == 'none' }}
            type=semver,pattern={{version}},suffix=${{ matrix.hardware-acceleration }},enabled=${{ matrix.hardware-acceleration != 'none' }}
            type=semver,pattern={{major}}.{{minor}},enabled=${{ matrix.hardware-acceleration == 'none' }}
            type=semver,pattern={{major}}.{{minor}},suffix=${{ matrix.hardware-acceleration }},enabled=${{ matrix.hardware-acceleration != 'none' }}

      - name: Get handbrake-build base image tag
        run: |
          echo BASE_IMAGE_TAG=$(\
          if [ ${{ github.ref_name }}  == 'main' ]; then \
            if [ ${{ matrix.hardware-acceleration }} == 'none' ]; then \
              echo "latest"; \
            else \
              echo "${{ matrix.hardware-acceleration }}"; \
            fi; \
          else \
            if [ ${{ matrix.hardware-acceleration }} == 'none' ]; then \
              echo "dev"; \
            else \
              echo "dev-${{ matrix.hardware-acceleration }}"; \
            fi; \
          fi; \
          ) >> $GITHUB_ENV

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ matrix.file }}
          # platforms: linux/amd64,linux/arm64
          platforms: linux/amd64
          build-args: |
            DISTROLESS_VARIANT=${{ github.head_ref == '' && 'nonroot' || 'debug-nonroot' }}
            HANDBRAKE_BUILD_BASE_IMAGE_TAG=${{ env.BASE_IMAGE_TAG }}
          provenance: false
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=${{matrix.image}}
          cache-to: type=gha,mode=max,scope=${{matrix.image}}
